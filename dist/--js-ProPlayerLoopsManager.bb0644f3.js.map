{"version":3,"sources":["--js-ProPlayerLoopsManager.js","node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["ProPlayerLoopsManager","a_Collections","n_LastActiveCollectionID","length","nCollectionID","i","reset","$","toggleClass","strUIParentID","strCollectionRole","bEditable","theCollection","getCollectionByRole","newCollectionID","ProPlayerLoopsCollection","appendCollection","pushUserLoopInterfaceState","aLoopsArray","strListTitle","bResetCollection","addListFromLoopArray","rebuildLoopsUIList","newCollection","push","nIndex","getID","getRole","nListIndex","nLoopIndex","clearActiveLoopsExcept","setLastActiveCollectionID","getCollectionByID","loopSelected","loopToggleSelected","theID","hasCollections","getLastActiveCollectionID","getCollectionListWithLoops","activateNextLoop","getFirstCollectionWithLoops","activatePreviousLoop","clearAllActiveLoops","theLoop","thePlayer","getEngineLoop","bWasPlaying","theEngine","isPlaying","stopPlayback","loopName","prompt","getName","startPlayback","setName","addInstantLoop","removeLoop","getLoopsArray","bAddButtonEnabled","bSaveButtonEnabled","userLoopsCollection","toggle","isDirty","findMatchingLoop","showLoadingIndicator","getCollectionLoopCount","strListWrapperID","str_UIWrapperID","b_Editable","n_CollectionID","str_Role","a_Lists","b_IsDirty","bDirty","empty","spinner","theList","validListIndex","clearLoopsUIList","setDirty","loopsArray","theLoops","j","console","log","theTotal","getListLoopCount","strNewName","getLoopAt","strListHTML","getEditable","collectionID","bUseAccordion","listIndex","getListTitle","loopIndex","setChecked","loopItem","bStacking","enableLoopStacking","theClass","html","accordionID","foundation","newList","theListIndex","ProPlayerLoopsList","createFromLoopArray","appendList","loopToMatch","bMatchFound","clearActiveLoops","refreshLoopCheckedStates","getListAt","nListID","a_Loops","n_ListID","str_ListTitle","a_newLoopsList","getLoopStart","getLoopEnd","strName","fLoopStart","fLoopEnd","InstantLoop","currentIndex","getFirstActiveLoop","getChecked","splice","addLoopFromValues","myLoop","Math","abs","newArray","toggleLoopCheckedState","loadLoop","processLoopToggle","computeStackedLoop","isLoopAlreadyChecked","isLoopAMiddle","previousLoopChecked","toggleChecked","getStackable","bConnected","myStartTime","myEndTime","previousStartTime","previousEndTime","nextStartTime","nextEndTime","bEnableStacking","previousLoopConnected","nextLoopConnected","setStackable","getLoopParentID","getCollectionID","getListID","nSelectedIndex","bLoopAlreadyChecked","bLoopIsMiddle","previousCheckedLoopIndex","findPreviousStackableCheckedLoop","nextCheckedLoopIndex","findNextStackableCheckedLoop","setStackableLoopRange","nLowerIndex","nHigherIndex","startIndex","nFoundIndex","nLength","lowerLoop","higherLoop","loopStart","loopEnd","loopInitialized","min","max","validateLoop","loopValid","fStartTime","fStopTime","str_Name","f_StartTime","parseFloat","f_EndTime","b_Stackable","b_Checked","toFixed","fEndTime","bStackable","bChecked","bWasChecked","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"--js-ProPlayerLoopsManager.bb0644f3.js","sourceRoot":"..","sourcesContent":["class ProPlayerLoopsManager {\n    constructor() {\n        this.a_Collections = [];\n        this.n_LastActiveCollectionID = -1;\n    }\n    hasLists() {\n        return this.a_Collections.length > 0;\n    }\n    setLastActiveCollectionID(nCollectionID) {\n        this.n_LastActiveCollectionID = nCollectionID;\n        //console.log(\"Setting last active list to:\" + nListID);\n    }\n    getLastActiveListID() {\n        return this.n_LastActiveCollectionID;\n    }\n    resetAll() {\n        for (let i = 0; i < this.a_Collections.length; i++) {\n            this.a_Collections[i].reset();\n        }\n        this.a_Collections.length = 0;\n        $('#addUserLoopButton').toggleClass('disabled', true);\n        $('#saveUserLoopsButton').toggleClass('disabled', true);\n    }\n    createNewCollection(strUIParentID, strCollectionRole, bEditable) {\n        var theCollection = this.getCollectionByRole(strCollectionRole);\n        if (theCollection == null) {\n            var newCollectionID = this.a_Collections.length;\n            theCollection = new ProPlayerLoopsCollection(newCollectionID, strUIParentID, strCollectionRole, bEditable);\n            this.appendCollection(theCollection);\n        } else {\n            theCollection.reset();\n            this.pushUserLoopInterfaceState();\n        }\n        return theCollection;\n    }\n    addListToCollectionFromArray(aLoopsArray, strCollectionRole, strListTitle, bResetCollection) {\n        //The collection must already exist before calling this method.\n        var theCollection = this.getCollectionByRole(strCollectionRole);\n        if (theCollection !== null) {\n            if (bResetCollection) {\n                //only reset the collection if indicated, otherwise append new list.\n                theCollection.reset();\n            }\n            theCollection.addListFromLoopArray(aLoopsArray, strListTitle);\n            theCollection.rebuildLoopsUIList();\n        }\n        this.pushUserLoopInterfaceState();\n    }\n    appendCollection(newCollection) {\n        this.a_Collections.push(newCollection);\n    }\n    getCollectionAt(nIndex) {\n        return this.a_Collections[nIndex];\n    }\n    getCollectionByID(nCollectionID) {\n        let theCollection = null;\n        for (let i = 0; i < this.a_Collections.length; i++) {\n            if (this.a_Collections[i].getID() == nCollectionID) {\n                theCollection = this.a_Collections[i];\n                break;\n            }\n        }\n        return theCollection;\n    }\n    getCollectionByRole(strCollectionRole) {\n        let theCollection = null;\n        for (let i = 0; i < this.a_Collections.length; i++) {\n            if (this.a_Collections[i].getRole() == strCollectionRole) {\n                theCollection = this.a_Collections[i];\n            }\n        }\n        return theCollection;\n    }\n    loopSelected(nCollectionID, nListIndex, nLoopIndex) {\n        //console.log(\"Loop Selected: \" + nListID + \",\" + nLoopIndex);\n        this.clearActiveLoopsExcept(nCollectionID, nListIndex);\n        this.setLastActiveCollectionID(nCollectionID);\n        let theCollection = this.getCollectionByID(nCollectionID);\n        theCollection.loopSelected(nListIndex, nLoopIndex);\n    }\n    loopToggleSelected(nCollectionID, nListIndex, nLoopIndex) {\n        this.clearActiveLoopsExcept(nCollectionID, nListIndex);\n        this.setLastActiveCollectionID(nCollectionID);\n        this.getCollectionByID(nCollectionID).loopToggleSelected(nListIndex, nLoopIndex);\n    }\n    activateNextLoop() {\n        let theID = -1;\n        if (this.hasCollections()) {\n            theID = this.getLastActiveCollectionID();\n            if (theID == -1) {\n                theID = this.getCollectionListWithLoops();\n            }\n            if (theID !== -1) {\n                this.getCollectionByID(theID).activateNextLoop();\n            }\n        }\n        return theID;\n    }\n    activatePreviousLoop() {\n        let theID = -1;\n        if (this.hasCollections()) {\n            theID = this.getLastActiveCollectionID();\n            if (theID == -1) {\n                theID = this.getFirstCollectionWithLoops();\n            }\n            if (theID !== -1) {\n                this.getCollectionByID(theID).activatePreviousLoop();\n            }\n        }\n        return theID;\n    }\n    clearActiveLoopsExcept(nCollectionID, nListIndex) {\n        //console.log(\"Clearing active loops\");\n        //Step 1: clear other lists.\n        for (let i = 0; i < this.a_Collections.length; i++) {\n            //console.log(\"Clearing active loops for list: \" + nListID)\n            let theCollection = this.a_Collections[i];\n            if (theCollection.getID() == nCollectionID) {\n                theCollection.clearActiveLoopsExcept(nListIndex);\n            } else {\n                theCollection.clearAllActiveLoops();\n            }\n        }\n    }\n    clearAllActiveLoops() {\n        //Step 1: clear other lists.\n        for (let i = 0; i < this.a_Collections.length; i++) {\n            this.a_Collections[i].clearAllActiveLoops();\n        }\n    }\n    addUserLoop() {\n        let theLoop = thePlayer.getEngineLoop();\n        if (theLoop !== null) {\n            let bWasPlaying = thePlayer.theEngine.isPlaying();\n            if (bWasPlaying) {\n                thePlayer.theEngine.stopPlayback();\n            }\n            let loopName = prompt('Enter loop name.', theLoop.getName());\n            if (bWasPlaying) {\n                thePlayer.theEngine.startPlayback();\n            }\n            if (loopName != null) {\n                theCollection = this.getCollectionByRole('user');\n                theLoop.setName(loopName);\n                theCollection.addInstantLoop(theLoop);\n                theCollection.rebuildLoopsUIList();\n                this.pushUserLoopInterfaceState();\n            }\n        }\n    }\n    removeLoopFromList(nCollectionID, nListIndex, nLoopIndex) {\n        let theCollection = this.getCollectionByID(nCollectionID);\n        theCollection.removeLoop(nListIndex, nLoopIndex);\n        theCollection.rebuildLoopsUIList();\n        this.pushUserLoopInterfaceState();\n    }\n    getUserLoopsArray() {\n        return this.getCollectionByRole('user').getLoopsArray();\n    }\n    pushUserLoopInterfaceState() {\n        let bAddButtonEnabled = false;\n        let bSaveButtonEnabled = false;\n        let userLoopsCollection = this.getCollectionByRole('user');\n        //console.log(\"User List is: \" + userList);\n        if (userLoopsCollection == null) {\n            //console.log(\"Showing no segment loaded error\");\n            $('#userLoopListEmpty').toggle(true);\n        } else {\n            $('#userLoopList').toggleClass('dirty', userLoopsCollection.isDirty());\n            bSaveButtonEnabled = userLoopsCollection.isDirty();\n            let theLoop = thePlayer.getEngineLoop();\n            if (theLoop !== null) {\n                bAddButtonEnabled = !userLoopsCollection.findMatchingLoop(theLoop);\n            }\n        }\n        $('#addUserLoopButton').toggleClass('disabled', !bAddButtonEnabled);\n        $('#saveUserLoopsButton').toggleClass('disabled', !bSaveButtonEnabled);\n    }\n    savingUserData() {\n        this.getCollectionByRole('user').showLoadingIndicator();\n    }\n    getFirstListWithLoops() {\n        let nIndex = -1;\n        for (let i = 0; i < this.a_Collections.length; i++) {\n            if (this.a_Collections[i].getCollectionLoopCount() > 0) {\n                nIndex = i;\n                break;\n            }\n        }\n        return nIndex;\n    }\n}\n\nclass ProPlayerLoopsCollection {\n    constructor(nCollectionID, strListWrapperID, strCollectionRole, bEditable) {\n        this.str_UIWrapperID = '#' + strListWrapperID;\n        this.b_Editable = bEditable;\n        this.n_CollectionID = nCollectionID;\n        this.str_Role = strCollectionRole;\n        this.a_Lists = [];\n        this.b_IsDirty = false;\n    }\n    getListCount() {\n        return this.a_Lists.length;\n    }\n    getID() {\n        return this.n_CollectionID;\n    };\n    getRole() {\n        return this.str_Role;\n    }\n    getEditable() {\n        return this.b_Editable;\n    }\n    isDirty() {\n        return this.b_IsDirty;\n    };\n    setDirty(bDirty) {\n        this.b_IsDirty = bDirty;\n    }\n    clearLoopsUIList() {\n        $(this.str_UIWrapperID).empty();\n    }\n    showLoadingIndicator() {\n        thePlayer.spinner(this.str_UIWrapperID);\n    }\n    getListAt(nIndex) {\n        let theList = null;\n        if (this.validListIndex(nIndex)) {\n            theList = this.a_Lists[nIndex];\n        }\n        return theList;\n    }\n    reset() {\n        this.clearLoopsUIList();\n        this.a_Lists.length = 0;\n        this.setDirty(false);\n        $(this.str_UIWrapperID + 'Empty').toggle(true);\n    }\n    getLoopsArray() {\n        let loopsArray = [];\n        for (let i = 0; i < this.a_Lists.length; i++) {\n            let theLoops = this.a_Lists[i].getLoopsArray();\n            for (j = 0; j < theLoops.length; j++) {\n                loopsArray.push(theLoops[j]);\n            }\n        }\n        console.log(loopsArray);\n        return loopsArray;\n    }\n    getCollectionLoopCount() {\n        let theTotal = 0;\n        for (let i = 0; i < this.a_Lists.length; i++) {\n            theTotal += this.a_Lists[i].getListLoopCount();\n        }\n        return theTotal;\n    }\n    setNewLoopName(nListIndex, nLoopIndex, strNewName) {\n        var theLoop = this.getLoopAt(nListIndex, nLoopIndex);\n        if (theLoop !== null) {\n            theLoop.setName(strNewName);\n            this.setDirty(true);\n        }\n    }\n    getLoopAt(nListIndex, nLoopIndex) {\n        if (this.validListIndex(nListIndex)) {\n            return this.a_Lists[nListIndex].getLoopAt(nLoopIndex);\n        } else {\n            return null;\n        }\n    }\n    validListIndex(nListIndex) {\n        return nListIndex < this.a_Lists.length ? true : false;\n    }\n    rebuildLoopsUIList() {\n        thePlayer.spinner(this.str_UIWrapperID);\n        $(this.str_UIWrapperID + 'Empty').toggle(false);\n        //this function assumes the loop list has already been reset\n        let strListHTML = '';\n        let bEditable = this.getEditable();\n        let collectionID = this.getID();\n        let bUseAccordion = this.a_Lists.length > 1;\n        if (bUseAccordion) {\n            // strListHTML += '<ul class=\"accordion sidebar-accordion\" id=\"loopsListAccordion-' + this.getRole() + '\" ';\n            // strListHTML += 'data-accordion data-allow-all-closed=\"true\" data-multi-expand=\"false\">';\n            strListHTML = `<ul class=\"accordion sidebar-accordion\" id=\"loopsListAccordion-${this.getRole()}\n\t\t\tdata-accordion data-allow-all-closed=\"true\" data-multi-expand=\"false\">`;\n        }\n        for (let listIndex = 0; listIndex < this.a_Lists.length; listIndex++) {\n            let theList = this.a_Lists[listIndex];\n            if (bUseAccordion) {\n                // strListHTML += '<li class=\"accordion-item\" data-accordion-item>';\n                // strListHTML += '<a class=\"accordion-title\">' + theList.getListTitle() + '</a>';\n                // strListHTML += '<div class=\"accordion-content\" data-tab-content>';\n                strListHTML = `<li class=\"accordion-item\" data-accordion-item>\n\t\t\t\t\t<a class=\"accordion-title\">${theList.getListTitle()}</a>\n\t\t\t\t\t<div class=\"accordion-content\" data-tab-content>\n\t\t\t\t`;\n            }\n            strListHTML += '<ul class=\"sidebar-list dark\">';\n            for (let loopIndex = 0; loopIndex < theList.getLoopsArray().length; loopIndex++) {\n                let theLoop = theList.getLoopAt(loopIndex);\n                theLoop.setChecked(false);\n                var loopItem = '<li class=\"sidebar-list-item loop button\" id=\"loopItem-';\n                loopItem += collectionID + '-' + listIndex + '-' + loopIndex + '\">';\n                let bStacking = theList.enableLoopStacking(loopIndex);\n                if (bStacking || bEditable) {\n                    let theClass = '';\n                    if (bStacking && bEditable) {\n                        theClass = 'both';\n                    }\n                    loopItem += '<a class=\"sidebar-list-item-link ' + theClass;\n                    loopItem += '\" onClick=\"thePlayer.loopsManager.loopSelected(';\n                    loopItem += collectionID + ',' + listIndex + ',' + loopIndex + ')\">';\n                    loopItem += theLoop.getName();\n                    loopItem += '</a>';\n                    if (bStacking) {\n                        loopItem += '<a class=\"sidebar-list-item-button check-button ';\n                        loopItem += theClass + '\" onClick=\"thePlayer.loopsManager.loopToggleSelected(';\n                        loopItem += collectionID + ',' + listIndex + ',' + loopIndex + '); return false;\"></a>';\n                    }\n                    if (bEditable) {\n                        loopItem += '<a class=\"sidebar-list-item-button delete-button ';\n                        loopItem += theClass + '\" onClick=\"thePlayer.loopsManager.removeLoopFromList(';\n                        loopItem += collectionID + ',' + listIndex + ',' + loopIndex + '); return false;\"></a>';\n                    }\n                } else {\n                    loopItem += '<a onClick=\"thePlayer.loopsManager.loopSelected(';\n                    loopItem += collectionID + ',' + listIndex + ',' + loopIndex + ')\">';\n                    loopItem += theLoop.getName();\n                    loopItem += '</a>';\n                }\n                loopItem += '</li>';\n                strListHTML += loopItem;\n            }\n            strListHTML += '</ul>';\n            if (bUseAccordion) {\n                strListHTML += '</div></li>';\n            }\n        }\n        $(this.str_UIWrapperID).html(strListHTML);\n        if (this.getCollectionLoopCount() == 0) {\n            //console.log(\"Showing error message for empty list.\");\n            $(this.str_UIWrapperID + 'Empty').toggle(true);\n        }\n        if (bUseAccordion) {\n            let accordionID = '#loopsListAccordion-' + this.getRole();\n            $(accordionID).foundation();\n        }\n    }\n    appendList(newList) {\n        this.a_Lists.push(newList);\n    }\n    addListFromLoopArray(aLoopsArray, strListTitle) {\n        //array must elements assumed to be in [name, start, end] format\\\n        //Clear this collection before calling this if you don't want the new\n        // list appended.\n        let theListIndex = this.a_Lists.length;\n        let theList = new ProPlayerLoopsList(this.getID(), theListIndex, strListTitle);\n        theList.createFromLoopArray(aLoopsArray);\n        this.appendList(theList);\n        this.setDirty(false);\n    }\n    findMatchingLoop(loopToMatch) {\n        bMatchFound = false;\n        for (let i = 0; i < this.a_Lists.length; i++) {\n            if (this.a_Lists[i].findMatchingLoop(loopToMatch)) {\n                bMatchFound = true;\n                break;\n            }\n        }\n        return bMatchFound;\n    }\n    clearActiveLoopsExcept(nListIndex) {\n        for (let i = 0; i < this.a_Lists.length; i++) {\n            if (i !== nListIndex) {\n                this.a_Lists[i].clearActiveLoops();\n                this.a_Lists[i].refreshLoopCheckedStates();\n            }\n        }\n    }\n    clearAllActiveLoops() {\n        for (let i = 0; i < this.a_Lists.length; i++) {\n            this.a_Lists[i].clearActiveLoops();\n            this.a_Lists[i].refreshLoopCheckedStates();\n        }\n    }\n    loopSelected(nListIndex, nLoopIndex) {\n        if (this.validListIndex(nListIndex)) {\n            this.getListAt(nListIndex).loopSelected(nLoopIndex);\n        }\n    }\n    loopToggleSelected(nListIndex, nLoopIndex) {\n        if (this.validListIndex(nListIndex)) {\n            this.getListAt(nListIndex).loopToggleSelected(nLoopIndex);\n        }\n    }\n    addInstantLoop(theLoop) {\n        let theList = this.getListAt(0);\n        if (theList == null) {\n            theList = new ProPlayerLoopsList(this.getID(), 0);\n            this.appendList(theList);\n        }\n        theList.addInstantLoop(theLoop);\n        this.setDirty(true);\n    }\n    addInstantLoopToList(nListIndex, theLoop) {\n        if (this.validListIndex(nListIndex)) {\n            this.getListAt(nListIndex).addInstantLoop(theLoop);\n            this.setDirty(true);\n        }\n    }\n    removeLoop(nListIndex, nLoopIndex) {\n        if (this.validListIndex(nListIndex)) {\n            this.getListAt(nListIndex).removeLoop(nLoopIndex);\n            this.setDirty(true);\n        }\n    }\n\n}\n\n\nclass ProPlayerLoopsList {\n    constructor(nCollectionID, nListID, strListTitle) {\n        this.a_Loops = [];\n        this.n_CollectionID = nCollectionID;\n        this.n_ListID = nListID;\n        this.str_ListTitle = strListTitle;\n    }\n    getCollectionID() {\n        return this.n_CollectionID;\n    }\n    getListID() {\n        return this.n_ListID;\n    }\n    getListTitle() {\n        return this.str_ListTitle;\n    }\n    setLoopsList(a_newLoopsList) {\n        this.a_Loops = a_newLoopsList;\n    }\n    getLoopAt(nIndex) {\n        return this.a_Loops[nIndex];\n    }\n    getLoopStart(nIndex) {\n        return this.getLoopAt(nIndex).getLoopStart();\n    }\n    getLoopEnd(nIndex) {\n        return this.getLoopAt(nIndex).getLoopEnd();\n    }\n    getListLoopCount() {\n        return this.a_Loops.length;\n    }\n    reset() {\n        this.a_Loops.length = 0;\n    }\n    addLoopFromValues(strName, fLoopStart, fLoopEnd) {\n        this.a_Loops.push(new InstantLoop(strName, fLoopStart, fLoopEnd));\n    }\n    addInstantLoop(theLoop) {\n        this.a_Loops.push(theLoop);\n        return this.a_Loops.length - 1;\n    }\n    setNewLoopName(nLoopIndex, strNewName) {\n        this.getLoopAt(nLoopIndex).setName(strNewName);\n    }\n    activateNextLoop() {\n        var currentIndex = this.getFirstActiveLoop();\n        if (currentIndex > -1) {\n            if (currentIndex < this.a_Loops.length - 1) {\n                this.loopSelected(currentIndex + 1);\n            } else {\n                this.loopSelected(0);\n            }\n        }\n    }\n    activatePreviousLoop() {\n        var currentIndex = this.getFirstActiveLoop();\n        if (currentIndex > -1) {\n            if (currentIndex > 0) {\n                this.loopSelected(currentIndex - 1);\n            } else {\n                this.loopSelected(this.a_Loops.length - 1);\n            }\n        }\n    }\n    getFirstActiveLoop() {\n        let nIndex = -1;\n        if (this.a_Loops.length > 0) {\n            nIndex = 0;\n            for (let i = 0; i < this.a_Loops.length; i++) {\n                if (this.a_Loops[i].getChecked()) {\n                    nIndex = i;\n                    break;\n                }\n            }\n        }\n        return nIndex;\n    }\n    removeLoop(nIndex) {\n        //console.log('Current List: ' + this.a_Loops);\n        //console.log('Removing Loop at: ' + nIndex);\n        this.a_Loops.splice(nIndex, 1);\n        //console.log('New List: ' + this.a_Loops);\n    }\n    createFromLoopArray(aLoopsArray) {\n        //array must elements assumed to be in [name, start, end] format\n        for (let i = 0; i < aLoopsArray.length; i++) {\n            this.addLoopFromValues(aLoopsArray[i][0], aLoopsArray[i][1], aLoopsArray[i][2]);\n        }\n    }\n    appendFromLoopArray(aLoopsArray) {\n        //array must elements assumed to be in [name, start, end] format\n        for (let i = 0; i < aLoopsArray.length; i++) {\n            this.addLoopFromValues(aLoopsArray[i][0], aLoopsArray[i][1], aLoopsArray[i][2]);\n        }\n    }\n    findMatchingLoop(loopToMatch) {\n        let bMatchFound = false;\n        for (let i = 0; i < this.a_Loops.length; i++) {\n            let myLoop = this.a_Loops[i];\n            if (Math.abs(loopToMatch.getLoopStart() - myLoop.getLoopStart()) < 0.1 &&\n                Math.abs(loopToMatch.getLoopEnd() - myLoop.getLoopEnd()) < 0.1) {\n                bMatchFound = true;\n            }\n        }\n        return bMatchFound;\n    }\n    getLoopsArray() {\n        let newArray = [];\n        //array must elements assumed to be in [name, start, end] format\n        for (let i = 0; i < this.a_Loops.length; i++) {\n            newArray.push([\n                this.a_Loops[i].getName(),\n                this.a_Loops[i].getLoopStart(),\n                this.a_Loops[i].getLoopEnd()\n            ]);\n        }\n        return newArray;\n    }\n    loopSelected(nLoopIndex) {\n        this.clearActiveLoops();\n        this.toggleLoopCheckedState(nLoopIndex);\n        this.refreshLoopCheckedStates();\n        //console.log(\"Activating Loop At: \" + nLoopIndex);\n        var theLoop = this.getLoopAt(nLoopIndex);\n        //console.log('Activating Loop:' + theLoop);\n        thePlayer.theEngine.loadLoop(this.getLoopAt(nLoopIndex).getLoopStart(), this.getLoopAt(nLoopIndex).getLoopEnd());\n    }\n    loopToggleSelected(nLoopIndex) {\n        //console.log('Loop Toggle Selected: ' + nLoopIndex);\n        this.processLoopToggle(nLoopIndex);\n        this.refreshLoopCheckedStates();\n        var theLoop = this.computeStackedLoop();\n        if (theLoop !== null) {\n            thePlayer.theEngine.loadLoop(theLoop.getLoopStart(), theLoop.getLoopEnd());\n        }\n    }\n    toggleLoopCheckedState(nLoopIndex) {\n        var isLoopAlreadyChecked = this.getLoopAt(nLoopIndex).getChecked();\n        if (isLoopAlreadyChecked && this.isLoopAMiddle(nLoopIndex)) {\n            // If this loop is already checked, and user clicks check again,\n            // clear all checked loops and turn this one back\n            this.clearActiveLoops();\n            this.getLoopAt(nLoopIndex).setChecked(true);\n        } else {\n            var previousLoopChecked = this.getLoopAt(nLoopIndex).toggleChecked();\n            if (previousLoopChecked) {\n                for (let i = nLoopIndex - 1; i >= 0; i--) {\n                    if (!this.getLoopAt(nLoopIndex).getChecked() || !this.getLoopAt(nLoopIndex).getStackable()) {\n                        previousLoopChecked = false;\n                    }\n                    this.getLoopAt(nLoopIndex).setChecked(previousLoopChecked);\n                }\n                previousLoopChecked = true;\n                for (let i = nLoopIndex + 1; i < this.a_Loops.length; i++) {\n                    if (!this.getLoopAt(i).getChecked() || !this.getLoopAt(i).getStackable()) {\n                        previousLoopChecked = false;\n                    }\n                    this.getLoopAt(i).setChecked(previousLoopChecked);\n                }\n            }\n        }\n    }\n    previousLoopConnected(i) {\n        bConnected = false;\n        if (i > 0) {\n            var myStartTime = this.getLoopStart(i);\n            var myEndTime = this.getLoopEnd(i);\n            var previousStartTime = this.getLoopStart(i - 1);\n            var previousEndTime = this.getLoopEnd(i - 1);\n            if (myStartTime > previousStartTime && myEndTime > previousEndTime && myStartTime - previousEndTime < 2) {\n                bConnected = true;\n            }\n        }\n        return bConnected;\n    }\n    nextLoopConnected(i) {\n        bConnected = false;\n        if (i < this.a_Loops.length - 1) {\n            var myStartTime = this.getLoopStart(i);\n            var myEndTime = this.getLoopEnd(i);\n            var nextStartTime = this.getLoopStart(i + 1);\n            var nextEndTime = this.getLoopEnd(i + 1);\n            if (myStartTime < nextStartTime && myEndTime < nextEndTime && nextStartTime - myEndTime < 2) {\n                bConnected = true;\n            }\n        }\n        return bConnected;\n    }\n    enableLoopStacking(nLoopIndex) {\n        var bEnableStacking = false;\n        if (!this.previousLoopConnected(nLoopIndex) &&\n            this.nextLoopConnected(nLoopIndex) &&\n            this.nextLoopConnected(nLoopIndex + 1)) {\n            //Is this the first loop in a series,\n            //meaning i, i+1, and i+2 are stackable, but i-1 is not\n            bEnableStacking = true;\n        } else if (this.previousLoopConnected(nLoopIndex) && this.nextLoopConnected(nLoopIndex)) {\n            //Is this in the middle of a series?\n            //meaning i, i-1 and i+1 are all stackable\n            bEnableStacking = true;\n        } else if (this.previousLoopConnected(nLoopIndex - 1) && this.previousLoopConnected(nLoopIndex)) {\n            //Is this the end of a chain?\n            //meaning i-2, i-1 and i are stackable, but i+1 is not.\n            bEnableStacking = true;\n        }\n        this.getLoopAt(nLoopIndex).setStackable(bEnableStacking);\n        return bEnableStacking;\n    }\n    clearActiveLoops() {\n        for (let i = 0; i < this.a_Loops.length; i++) {\n            this.getLoopAt(i).setChecked(false);\n        }\n        this.refreshLoopCheckedStates();\n    }\n    refreshLoopCheckedStates() {\n        for (let i = 0; i < this.a_Loops.length; i++) {\n            $(this.getLoopParentID(i)).toggleClass('active', this.getLoopAt(i).getChecked());\n        }\n    }\n    getLoopParentID(nIndex) {\n        return '#loopItem-' + this.getCollectionID() + '-' + this.getListID() + '-' + nIndex;\n    }\n    processLoopToggle(nSelectedIndex) {\n        //console.log(\"Processing Loop Toggle At: \" + nSelectedIndex);\n        var bLoopAlreadyChecked = this.getLoopAt(nSelectedIndex).getChecked();\n        var bLoopIsMiddle = this.isLoopAMiddle(nSelectedIndex);\n        //Case 1: Loop is already checked and is between two other checked loops.\n        //Action: clear all checked loops, toggle selected one back on.\n        if (bLoopAlreadyChecked && bLoopIsMiddle) {\n            // If this loop is already checked, and user clicks check again,\n            // clear all checked loops and turn this one back\n            this.clearActiveLoops();\n            this.getLoopAt(nSelectedIndex).setChecked(true);\n        } else if (bLoopAlreadyChecked && !bLoopIsMiddle) {\n            //This loop is already checked, but is not a middle meaning it is the end of a range.\n            //We simply need to toggle it and not touch the others.\n            this.getLoopAt(nSelectedIndex).setChecked(false);\n        } else if (!bLoopAlreadyChecked) {\n            //Case 2: Loop is being toggled on\n            //Actions: Search for loop range to toggle on.\n            var previousCheckedLoopIndex = this.findPreviousStackableCheckedLoop(nSelectedIndex);\n            var nextCheckedLoopIndex = this.findNextStackableCheckedLoop(nSelectedIndex);\n            if (previousCheckedLoopIndex >= 0) {\n                this.setStackableLoopRange(previousCheckedLoopIndex, nSelectedIndex);\n            } else if (nextCheckedLoopIndex >= 0) {\n                this.setStackableLoopRange(nSelectedIndex, nextCheckedLoopIndex);\n            } else {\n                //No other connected checked loops exist. Clear everything\n                //and toggle this one on.\n                this.clearActiveLoops();\n                this.getLoopAt(nSelectedIndex).setChecked(true);\n            }\n        }\n    }\n    setStackableLoopRange(nLowerIndex, nHigherIndex) {\n        for (let i = nLowerIndex; i <= nHigherIndex; i++) {\n            this.getLoopAt(i).setChecked(true);\n        }\n    }\n    findPreviousStackableCheckedLoop(startIndex) {\n        nFoundIndex = -1;\n        for (let i = startIndex - 1; i >= 0; i--) {\n            if (this.getLoopAt(i).getChecked() && this.getLoopAt(i).getStackable()) {\n                nFoundIndex = i;\n            }\n        }\n        return nFoundIndex;\n    }\n    findNextStackableCheckedLoop(startIndex) {\n        nFoundIndex = -1;\n        var nLength = this.a_Loops.length;\n        for (let i = startIndex + 1; i < nLength; i++) {\n            if (this.getLoopAt(i).getChecked() && this.getLoopAt(i).getStackable()) {\n                nFoundIndex = i;\n            }\n        }\n        return nFoundIndex;\n    }\n    toggleLoopCheckedState(nLoopIndex) {\n        var isLoopAlreadyChecked = this.getLoopAt(nLoopIndex).getChecked();\n        if (isLoopAlreadyChecked && this.isLoopAMiddle(nLoopIndex)) {\n            // If this loop is already checked, and user clicks check again,\n            // clear all checked loops and turn this one back\n            this.clearActiveLoops();\n            this.getLoopAt(nLoopIndex).setChecked(true);\n        } else {\n            this.getLoopAt(nLoopIndex).setChecked(!this.getLoopAt(nLoopIndex).getChecked());\n            var previousLoopChecked = this.getLoopAt(nLoopIndex).getChecked();\n            if (previousLoopChecked) {\n                for (let i = nLoopIndex - 1; i >= 0; i--) {\n                    if (!this.getLoopAt(i).getChecked() || !this.getLoopAt(i).getStackable()) {\n                        previousLoopChecked = false;\n                    }\n                    this.getLoopAt(i).setChecked(previousLoopChecked);\n                }\n                previousLoopChecked = true;\n                for (let i = nLoopIndex + 1; i < this.a_Loops.length; i++) {\n                    if (!this.getLoopAt(i).getChecked() || !this.getLoopAt(i).getStackable()) {\n                        previousLoopChecked = false;\n                    }\n                    this.getLoopAt(i).setChecked(previousLoopChecked);\n                }\n            }\n        }\n    }\n    isLoopAMiddle(nLoopIndex) {\n        var lowerLoop = false;\n        var higherLoop = false;\n        for (let i = 0; i < this.a_Loops.length; i++) {\n            if (this.getLoopAt(i).getChecked() && this.getLoopAt(i).getStackable()) {\n                if (i < nLoopIndex) {\n                    //console.log('Lower selected loop found');\n                    lowerLoop = true;\n                } else if (i > nLoopIndex) {\n                    //console.log('Higher selected loop found');\n                    higherLoop = true;\n                }\n            }\n        }\n        //console.log('Loop is middle: ' + (lowerLoop && higherLoop));\n        return lowerLoop && higherLoop;\n    }\n    computeStackedLoop() {\n        var loopStart = 0;\n        var loopEnd = 0;\n        var loopInitialized = false;\n        var nLength = this.a_Loops.length;\n        for (let i = 0; i < nLength; i++) {\n            var theLoop = this.getLoopAt(i);\n            if (theLoop.getChecked()) {\n                if (!loopInitialized) {\n                    loopStart = theLoop.getLoopStart();\n                    loopEnd = theLoop.getLoopEnd();\n                    loopInitialized = true;\n                } else {\n                    loopStart = Math.min(loopStart, theLoop.getLoopStart());\n                    loopEnd = Math.max(loopEnd, theLoop.getLoopEnd());\n                }\n            }\n        }\n        //console.log(\"New Loop calculated: \" + loopStart + \",\" + loopEnd);\n        if (this.validateLoop(loopStart, loopEnd)) {\n            return new InstantLoop('Combined Loop', loopStart, loopEnd);\n            //this.theEngine.loadLoop( loopStart, loopEnd );\n        } else {\n            return null;\n            //this.theEngine.stopLooping();\n        }\n    }\n    validateLoop(loopStart, loopEnd) {\n        var loopValid = true;\n        if (loopStart < 0 || loopStart > loopEnd || loopEnd <= 0 || loopStart == loopEnd) {\n            loopValid = false;\n        }\n        return loopValid;\n    }\n}\n\n\nclass InstantLoop {\n    constructor(strName, fStartTime, fStopTime) {\n        this.str_Name = strName;\n        this.f_StartTime = parseFloat(fStartTime);\n        this.f_EndTime = parseFloat(fStopTime);\n        this.b_Stackable = false;\n        this.b_Checked = false;\n        if (strName == '') {\n            this.str_Name = this.f_StartTime.toFixed(2) + ' - ' + this.f_EndTime.toFixed(2);\n        }\n    }\n    //Setters\n    setLoopStart(fStartTime) {\n        this.f_StartTime = parseFloat(fStartTime);\n    }\n    setLoopEnd(fEndTime) {\n        this.f_EndTime = parseFloat(fStopTime);\n    }\n    setStackable(bStackable) {\n        this.b_Stackable = bStackable;\n    }\n    setChecked(bChecked) {\n        this.b_Checked = bChecked;\n    }\n    setName(strName) {\n        this.str_Name = strName;\n    }\n    //Getters\n    getLoopStart() {\n        return this.f_StartTime;\n    }\n    getLoopEnd() {\n        return this.f_EndTime;\n    }\n    getStackable() {\n        return this.b_Stackable;\n    }\n    getChecked() {\n        return this.b_Checked;\n    }\n    getName() {\n        return this.str_Name;\n    }\n    toggleChecked() {\n        let bWasChecked = this.b_Checked;\n        this.b_Checked = !bWasChecked;\n        return this.b_Checked;\n    }\n    validate() {\n        if (this.f_EndTime < this.f_StartTime + 0.1) {\n            return false;\n        }\n        return true;\n    }\n    getDefaultName() {\n        return this.f_StartTime.toFixed(2) + ' - ' + this.f_EndTime.toFixed(2);\n    }\n\n}","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}